{"ast":null,"code":"import _slicedToArray from \"/Users/jenineellis/CWCAdmin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jenineellis/CWCAdmin/client/src/pages/dashboard/Dashboard.js\";\nimport React, { useState } from \"react\";\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis } from \"recharts\";\nimport style from \"./styles\";\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/producerTable/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst PieChartData = [{\n  name: \"Group A\",\n  value: 400,\n  color: \"primary\"\n}, {\n  name: \"Group B\",\n  value: 300,\n  color: \"secondary\"\n}, {\n  name: \"Group C\",\n  value: 300,\n  color: \"warning\"\n}, {\n  name: \"Group D\",\n  value: 200,\n  color: \"success\"\n}];\nexport default function Dashboard(props) {\n  var classes = style();\n  var theme = useTheme(); // local\n\n  var _useState = useState(\"monthly\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mainChartState = _useState2[0],\n      setMainChartState = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(PageTitle, {\n    title: \"Dashboard\",\n    button: \"Latest Reports\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Visits Today\",\n    upperTitle: true,\n    bodyClass: classes.fullHeightBody,\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.visitsNumberContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    size: \"xl\",\n    weight: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"12, 678\"), React.createElement(LineChart, {\n    width: 55,\n    height: 30,\n    data: [{\n      value: 10\n    }, {\n      value: 15\n    }, {\n      value: 10\n    }, {\n      value: 17\n    }, {\n      value: 18\n    }],\n    margin: {\n      left: theme.spacing(2)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.success.main,\n    strokeWidth: 2,\n    dot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Registrations\"), React.createElement(Typography, {\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"860\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Sign Out\"), React.createElement(Typography, {\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"32\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Rate\"), React.createElement(Typography, {\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"3.25%\"))))), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"App Performance\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.performanceLegendWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.legendElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Dot, {\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Integration\")), React.createElement(\"div\", {\n    className: classes.legendElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Dot, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.legendElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"SDK\"))), React.createElement(\"div\", {\n    className: classes.progressSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Integration\"), React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: 30,\n    classes: {\n      barColorPrimary: classes.progressBar\n    },\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    size: \"md\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.progressSectionTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"SDK\"), React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: 55,\n    classes: {\n      barColorPrimary: classes.progressBar\n    },\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 8,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Server Overview\",\n    upperTitle: true,\n    className: classes.card,\n    bodyClass: classes.fullHeightBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.serverOverviewElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.serverOverviewElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"60% / 37\\xB0\\u0421 / 3.3 Ghz\"), React.createElement(\"div\", {\n    className: classes.serverOverviewElementChartWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 50,\n    width: \"99%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: getRandomData(10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.secondary.main,\n    fill: theme.palette.secondary.light,\n    strokeWidth: 2,\n    fillOpacity: \"0.25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.serverOverviewElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.serverOverviewElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"54% / 31\\xB0\\u0421 / 3.3 Ghz\"), React.createElement(\"div\", {\n    className: classes.serverOverviewElementChartWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 50,\n    width: \"99%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: getRandomData(10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.primary.main,\n    fill: theme.palette.primary.light,\n    strokeWidth: 2,\n    fillOpacity: \"0.25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.serverOverviewElement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    className: classes.serverOverviewElementText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"57% / 21\\xB0\\u0421 / 3.3 Ghz\"), React.createElement(\"div\", {\n    className: classes.serverOverviewElementChartWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    height: 50,\n    width: \"99%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: getRandomData(10),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"value\",\n    stroke: theme.palette.warning.main,\n    fill: theme.palette.warning.light,\n    strokeWidth: 2,\n    fillOpacity: \"0.25\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }))))))), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Revenue Breakdown\",\n    upperTitle: true,\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 144,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(PieChart, {\n    margin: {\n      left: theme.spacing(2)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: PieChartData,\n    innerRadius: 45,\n    outerRadius: 60,\n    dataKey: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, PieChartData.map((entry, index) => React.createElement(Cell, {\n    key: \"cell-\".concat(index),\n    fill: theme.palette[entry.color].main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.pieChartLegendWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, PieChartData.map(({\n    name,\n    value,\n    color\n  }, index) => React.createElement(\"div\", {\n    key: color,\n    className: classes.legendItemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, React.createElement(Dot, {\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    style: {\n      whiteSpace: \"nowrap\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"\\xA0\", name, \"\\xA0\"), React.createElement(Typography, {\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"\\xA0\", value)))))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Daily Line Chart\"), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Tablet\")), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Mobile\")), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Desktop\"))), React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }),\n      autoWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Daily\"), React.createElement(MenuItem, {\n      value: \"weekly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Weekly\"), React.createElement(MenuItem, {\n      value: \"monthly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Monthly\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: mainChartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, React.createElement(YAxis, {\n    ticks: [0, 2500, 5000, 7500],\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    tickFormatter: i => i + 1,\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"desktop\",\n    fill: theme.palette.background.light,\n    strokeWidth: 0,\n    activeDot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"mobile\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    activeDot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"tablet\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }))))), mock.bigStat.map(stat => React.createElement(Grid, {\n    item: true,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    key: stat.product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, React.createElement(BigStat, Object.assign({}, stat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Support Requests\",\n    upperTitle: true,\n    noBodyPadding: true,\n    bodyClass: classes.tableWidget,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, React.createElement(Table, {\n    data: mock.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  })))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/jenineellis/CWCAdmin/client/src/pages/dashboard/Dashboard.js"],"names":["React","useState","Grid","LinearProgress","Select","OutlinedInput","MenuItem","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","style","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","PieChartData","name","value","color","Dashboard","props","classes","theme","mainChartState","setMainChartState","fullHeightBody","card","visitsNumberContainer","left","spacing","palette","success","main","performanceLegendWrapper","legendElement","legendElementText","progressSection","progressSectionTitle","barColorPrimary","progressBar","progress","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","getRandomData","secondary","light","primary","warning","map","entry","index","pieChartLegendWrapper","legendItemContainer","whiteSpace","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","target","notchedOutline","mainChartSelectRoot","input","mainChartSelect","top","right","bottom","fill","text","hint","fontSize","i","background","stroke","dark","strokeWidth","bigStat","stat","product","tableWidget","table","length","min","max","multiplier","maxDiff","array","Array","lastValue","item","randomValue","Math","floor","random","resultArray","tablet","desktop","mobile","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis,XAxis, } from \"recharts\";\nimport style from \"./styles\";\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/producerTable/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = style();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button=\"Latest Reports\" />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Visits Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Typography size=\"xl\" weight=\"medium\">\n                12, 678\n              </Typography>\n              <LineChart\n                width={55}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n                margin={{ left: theme.spacing(2) }}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Registrations\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Sign Out\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={30}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={55}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart margin={{ left: theme.spacing(2) }}>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={45}\n                      outerRadius={60}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\" }}>\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}"]},"metadata":{},"sourceType":"module"}