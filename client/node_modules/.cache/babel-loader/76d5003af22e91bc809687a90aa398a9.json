{"ast":null,"code":"import _slicedToArray from \"/Users/jenineellis/CWCAdmin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jenineellis/CWCAdmin/client/src/pages/notifications/Notifications.js\";\nimport React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\"; // styles\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport style from \"./styles\"; // components\n\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\nconst positions = [toast.POSITION.TOP_LEFT, toast.POSITION.TOP_CENTER, toast.POSITION.TOP_RIGHT, toast.POSITION.BOTTOM_LEFT, toast.POSITION.BOTTOM_CENTER, toast.POSITION.BOTTOM_RIGHT];\nexport default function NotificationsPage(props) {\n  var classes = style(); // local\n\n  var _useState = useState(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      notificationsPosition = _useState2[0],\n      setNotificationPosition = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorToastId = _useState4[0],\n      setErrorToastId = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(PageTitle, {\n    title: \"Notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    className: classes.toastsContainer,\n    closeButton: React.createElement(CloseButton, {\n      className: classes.notificationCloseButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }),\n    closeOnClick: false,\n    progressClassName: classes.notificationProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Layout Options\",\n    disableWidgetMenu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"There are few position options available for notifications. You can click any of them to change notifications position:\"), React.createElement(\"div\", {\n    className: classes.layoutContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.layoutButtonsRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(0),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(1),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(2),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 2\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    className: classes.layoutText,\n    size: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Click any position\"), React.createElement(\"div\", {\n    className: classes.layoutButtonsRow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(3),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 3\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(4),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 4\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => changeNotificationPosition(5),\n    className: classnames(classes.layoutButton, {\n      [classes.layoutButtonActive]: notificationsPosition === 5\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Notifications Types\",\n    disableWidgetMenu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Different types of notifications for lost of use cases. Custom classes are also supported.\"), React.createElement(\"div\", {\n    className: classes.buttonsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleNotificationCall(\"info\"),\n    className: classnames(classes.notificationCallButton),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Info Message\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => handleNotificationCall(\"error\"),\n    className: classnames(classes.notificationCallButton),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Error + Retry Message\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"success\",\n    onClick: () => handleNotificationCall(\"success\"),\n    className: classnames(classes.notificationCallButton),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Success Message\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Usage\",\n    disableWidgetMenu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Notifications are created with the help of\", \" \", React.createElement(\"a\", {\n    href: \"https://github.com/fkhadra/react-toastify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"react-toastify\")), React.createElement(\"div\", {\n    className: classes.codeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(SyntaxHighlighter, {\n    className: classes.codeComponent,\n    language: \"javascript\",\n    style: docco,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"\\n  // import needed components, functions and styles\\n  import { ToastContainer, toast } from 'react-toastify';\\n  import 'react-toastify/dist/ReactToastify.css';\\n\\n  const Page = () => {\\n    <div>\\n      <ToastContainer />\\n      <button onClick={() => toast('Toast Message')}>\\n        show notification\\n      </button>\\n    </div>\\n  };\\n            \"), React.createElement(Typography, {\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"For more API information refer to the library documentation\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Notification Types Examples\",\n    disableWidgetMenu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"message\",\n    message: \"Thanks for Checking out Messenger\",\n    variant: \"contained\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"feedback\",\n    message: \"New user feedback received\",\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"customer\",\n    message: \"New customer is registered\",\n    variant: \"contained\",\n    color: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"shipped\",\n    message: \"The order was shipped\",\n    variant: \"contained\",\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"delivered\",\n    message: \"The order was delivered\",\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    shadowless: true,\n    type: \"defence\",\n    message: \"5 Defence alerts\",\n    variant: \"contained\",\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Notification Types Examples\",\n    disableWidgetMenu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"report\",\n    message: \"New report has been received\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"feedback\",\n    message: \"New user feedback received\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"shipped\",\n    message: \"The item was shipped\",\n    color: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"message\",\n    message: \"The new message from user @nahawaii\",\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"upload\",\n    message: \"Your file is ready to upload\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"disc\",\n    message: \"The disc is full\",\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Notification Types Examples\",\n    disableWidgetMenu: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"report\",\n    message: \"New report has been received\",\n    variant: \"rounded\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"feedback\",\n    message: \"New user feedback received\",\n    variant: \"rounded\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"shipped\",\n    message: \"The item was shipped\",\n    variant: \"rounded\",\n    color: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"message\",\n    message: \"The new message from user @nahawaii\",\n    variant: \"rounded\",\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"upload\",\n    message: \"Your file is ready to upload\",\n    variant: \"rounded\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    className: classes.notificationItem,\n    type: \"disc\",\n    message: \"The disc is full\",\n    variant: \"rounded\",\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }))))); // #############################################################\n\n  function sendNotification(componentProps, options) {\n    return toast(React.createElement(Notification, Object.assign({}, componentProps, {\n      className: classes.notificationComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })), options);\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\"\n    };\n    toast.update(errorToastId, {\n      render: React.createElement(Notification, Object.assign({}, componentProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      })),\n      type: \"success\"\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\"\n        };\n        break;\n\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification\n        };\n        break;\n\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\"\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification\n    });\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n} // #############################################################\n\nfunction CloseButton({\n  closeToast,\n  className\n}) {\n  return React.createElement(CloseIcon, {\n    className: className,\n    onClick: closeToast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/jenineellis/CWCAdmin/client/src/pages/notifications/Notifications.js"],"names":["React","useState","Grid","Close","CloseIcon","ToastContainer","toast","SyntaxHighlighter","docco","classnames","style","Widget","PageTitle","Notification","Typography","Button","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","NotificationsPage","props","classes","notificationsPosition","setNotificationPosition","errorToastId","setErrorToastId","toastsContainer","notificationCloseButton","notificationProgress","layoutContainer","layoutButtonsRow","changeNotificationPosition","layoutButton","layoutButtonActive","layoutText","buttonsContainer","handleNotificationCall","notificationCallButton","codeContainer","codeComponent","notificationItem","sendNotification","componentProps","options","notificationComponent","retryErrorNotification","type","message","variant","color","update","render","notificationType","extraButton","extraButtonClick","toastId","position","progressClassName","progress","onClose","className","notification","positionId","CloseButton","closeToast"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport style from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  var classes = style();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"Notifications\" />\n      <Grid container spacing={8}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Layout Options\" disableWidgetMenu>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\n                  })}\n                />\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall(\"info\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall(\"error\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall(\"success\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Usage\" disableWidgetMenu>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n            <div className={classes.codeContainer}>\n              <SyntaxHighlighter\n                className={classes.codeComponent}\n                language=\"javascript\"\n                style={docco}\n              >{`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}</SyntaxHighlighter>\n              <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n"]},"metadata":{},"sourceType":"module"}