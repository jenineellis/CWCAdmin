{"ast":null,"code":"import _slicedToArray from \"/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/src/pages/dashboard/components/BigStat/BigStat.js\";\nimport React, { useState } from \"react\";\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { BarChart, Bar } from \"recharts\";\nimport classnames from \"classnames\"; // styles\n\nimport style from \"./styles\"; // components\n\nimport Widget from \"../../../../components/Widget\";\nimport { Typography } from \"../../../../components/Wrappers\";\nexport default function BigStat(props) {\n  var product = props.product,\n      total = props.total,\n      color = props.color,\n      registrations = props.registrations,\n      bounce = props.bounce;\n  var classes = style();\n  var theme = useTheme(); // local\n\n  var _useState = useState(\"daily\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return React.createElement(Widget, {\n    header: React.createElement(\"div\", {\n      className: classes.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, product), React.createElement(Select, {\n      value: value,\n      onChange: e => setValue(e.target.value),\n      input: React.createElement(Input, {\n        disableUnderline: true,\n        classes: {\n          input: classes.selectInput\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }),\n      className: classes.select,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Daily\"), React.createElement(MenuItem, {\n      value: \"weekly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Weekly\"), React.createElement(MenuItem, {\n      value: \"monthly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Monthly\"))),\n    upperTitle: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.totalValueContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.totalValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    size: \"xxl\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, total[value]), React.createElement(Typography, {\n    color: total.percent.profit ? \"success\" : \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"\\xA0\", total.percent.profit ? \"+\" : \"-\", total.percent.value, \"%\")), React.createElement(BarChart, {\n    width: 150,\n    height: 70,\n    data: getRandomData(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Bar, {\n    dataKey: \"value\",\n    fill: theme.palette[color].main,\n    radius: 10,\n    barSize: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.bottomStatsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classnames(classes.statCell, classes.borderRight),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, registrations[value].value), React.createElement(ArrowForwardIcon, {\n    className: classnames(classes.profitArrow, {\n      [!registrations[value].profit]: classes.profitArrowDanger\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Registrations\")), React.createElement(\"div\", {\n    className: classes.statCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, bounce[value].value, \"%\"), React.createElement(ArrowForwardIcon, {\n    className: classnames(classes.profitArrow, {\n      [!registrations[value].profit]: classes.profitArrowDanger\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Bounce Rate\")), React.createElement(\"div\", {\n    className: classnames(classes.statCell, classes.borderRight),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, registrations[value].value * 10), React.createElement(ArrowForwardIcon, {\n    className: classnames(classes.profitArrow, {\n      [classes.profitArrowDanger]: !registrations[value].profit\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    size: \"sm\",\n    color: \"text\",\n    colorBrightness: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Views\"))));\n} // #######################################################################\n\nfunction getRandomData() {\n  return Array(7).fill().map(() => ({\n    value: Math.floor(Math.random() * 10) + 1\n  }));\n}","map":{"version":3,"sources":["/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/src/pages/dashboard/components/BigStat/BigStat.js"],"names":["React","useState","Grid","Select","MenuItem","Input","ArrowForward","ArrowForwardIcon","useTheme","BarChart","Bar","classnames","style","Widget","Typography","BigStat","props","product","total","color","registrations","bounce","classes","theme","value","setValue","title","e","target","input","selectInput","select","totalValueContainer","totalValue","percent","profit","getRandomData","palette","main","bottomStatsContainer","statCell","borderRight","profitArrow","profitArrowDanger","Array","fill","map","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { BarChart, Bar } from \"recharts\";\nimport classnames from \"classnames\";\n\n// styles\nimport style from \"./styles\";\n\n// components\nimport Widget from \"../../../../components/Widget\";\nimport { Typography } from \"../../../../components/Wrappers\";\n\nexport default function BigStat(props) {\n  var { product, total, color, registrations, bounce } = props;\n  var classes = style();\n  var theme = useTheme();\n\n  // local\n  var [value, setValue] = useState(\"daily\");\n\n  return (\n    <Widget\n      header={\n        <div className={classes.title}>\n          <Typography variant=\"h5\">{product}</Typography>\n\n          <Select\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            input={\n              <Input\n                disableUnderline\n                classes={{ input: classes.selectInput }}\n              />\n            }\n            className={classes.select}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n          </Select>\n        </div>\n      }\n      upperTitle\n    >\n      <div className={classes.totalValueContainer}>\n        <div className={classes.totalValue}>\n          <Typography size=\"xxl\" color=\"text\" colorBrightness=\"secondary\">\n            {total[value]}\n          </Typography>\n          <Typography color={total.percent.profit ? \"success\" : \"secondary\"}>\n            &nbsp;{total.percent.profit ? \"+\" : \"-\"}\n            {total.percent.value}%\n          </Typography>\n        </div>\n        <BarChart width={150} height={70} data={getRandomData()}>\n          <Bar\n            dataKey=\"value\"\n            fill={theme.palette[color].main}\n            radius={10}\n            barSize={10}\n          />\n        </BarChart>\n      </div>\n      <div className={classes.bottomStatsContainer}>\n        <div className={classnames(classes.statCell, classes.borderRight)}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">{registrations[value].value}</Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [!registrations[value].profit]: classes.profitArrowDanger,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Registrations\n          </Typography>\n        </div>\n        <div className={classes.statCell}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">{bounce[value].value}%</Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [!registrations[value].profit]: classes.profitArrowDanger,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Bounce Rate\n          </Typography>\n        </div>\n        <div className={classnames(classes.statCell, classes.borderRight)}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">\n              {registrations[value].value * 10}\n            </Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [classes.profitArrowDanger]: !registrations[value].profit,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Views\n          </Typography>\n        </div>\n      </div>\n    </Widget>\n  );\n}\n\n// #######################################################################\n\nfunction getRandomData() {\n  return Array(7)\n    .fill()\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\n}\n"]},"metadata":{},"sourceType":"module"}