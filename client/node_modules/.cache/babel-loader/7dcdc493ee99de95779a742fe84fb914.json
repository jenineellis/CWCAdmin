{"ast":null,"code":"import _slicedToArray from \"/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/src/pages/dashboard/Dashboard.js\";\nimport React, { useState } from \"react\";\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis } from \"recharts\";\nimport style from \"./styles\";\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/producerTable/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nconst mainChartData = getMainChartData();\nconst PieChartData = [{\n  name: \"Group A\",\n  value: 400,\n  color: \"primary\"\n}, {\n  name: \"Group B\",\n  value: 300,\n  color: \"secondary\"\n}, {\n  name: \"Group C\",\n  value: 300,\n  color: \"warning\"\n}, {\n  name: \"Group D\",\n  value: 200,\n  color: \"success\"\n}];\nexport default function Dashboard(props) {\n  var classes = style();\n  var theme = useTheme(); // local\n\n  var _useState = useState(\"monthly\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mainChartState = _useState2[0],\n      setMainChartState = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(PageTitle, {\n    title: \"Dashboard\",\n    button: \"Latest Reports\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    bodyClass: classes.mainChartBody,\n    header: React.createElement(\"div\", {\n      className: classes.mainChartHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"text\",\n      colorBrightness: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Daily Line Chart\"), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Tablet\")), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Mobile\")), React.createElement(\"div\", {\n      className: classes.mainChartHeaderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Dot, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.mainChartLegentElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Desktop\"))), React.createElement(Select, {\n      value: mainChartState,\n      onChange: e => setMainChartState(e.target.value),\n      input: React.createElement(OutlinedInput, {\n        labelWidth: 0,\n        classes: {\n          notchedOutline: classes.mainChartSelectRoot,\n          input: classes.mainChartSelect\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      autoWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Daily\"), React.createElement(MenuItem, {\n      value: \"weekly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Weekly\"), React.createElement(MenuItem, {\n      value: \"monthly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Monthly\"))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    minWidth: 500,\n    height: 350,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    margin: {\n      top: 0,\n      right: -15,\n      left: -15,\n      bottom: 0\n    },\n    data: mainChartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(YAxis, {\n    ticks: [0, 2500, 5000, 7500],\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    tickFormatter: i => i + 1,\n    tick: {\n      fill: theme.palette.text.hint + \"80\",\n      fontSize: 14\n    },\n    stroke: theme.palette.text.hint + \"80\",\n    tickLine: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"natural\",\n    dataKey: \"desktop\",\n    fill: theme.palette.background.light,\n    strokeWidth: 0,\n    activeDot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"natural\",\n    dataKey: \"mobile\",\n    stroke: theme.palette.primary.main,\n    strokeWidth: 2,\n    dot: false,\n    activeDot: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"tablet\",\n    stroke: theme.palette.warning.main,\n    strokeWidth: 2,\n    dot: {\n      stroke: theme.palette.warning.dark,\n      strokeWidth: 2,\n      fill: theme.palette.warning.main\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }))))), mock.bigStat.map(stat => React.createElement(Grid, {\n    item: true,\n    md: 4,\n    sm: 6,\n    xs: 12,\n    key: stat.product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(BigStat, Object.assign({}, stat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Widget, {\n    title: \"Support Requests\",\n    upperTitle: true,\n    noBodyPadding: true,\n    bodyClass: classes.tableWidget,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Table, {\n    data: mock.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })))));\n} // #######################################################################\n\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (randomValue <= min || randomValue >= max || lastValue && randomValue - lastValue > maxDiff) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n    return {\n      value: randomValue\n    };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var Whites = getRandomData(31, 3500, 6500, 7500, 1000);\n  var Reds = getRandomData(31, 1500, 7500, 7500, 1500);\n  var Sparkeling = getRandomData(31, 1500, 7500, 7500, 1500);\n  var Rose = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < wine.length; i++) {\n    resultArray.push({\n      Red: Red[i].value,\n      White: White[i].value,\n      Sparkeling: Sparkeling[i].value,\n      Rose: Rose[i].value\n    });\n  }\n\n  return resultArray;\n}","map":{"version":3,"sources":["/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/src/pages/dashboard/Dashboard.js"],"names":["React","useState","Grid","LinearProgress","Select","OutlinedInput","MenuItem","useTheme","ResponsiveContainer","ComposedChart","AreaChart","LineChart","Line","Area","PieChart","Pie","Cell","YAxis","XAxis","style","mock","Widget","PageTitle","Typography","Dot","Table","BigStat","mainChartData","getMainChartData","PieChartData","name","value","color","Dashboard","props","classes","theme","mainChartState","setMainChartState","mainChartBody","mainChartHeader","mainChartHeaderLabels","mainChartHeaderLabel","mainChartLegentElement","e","target","notchedOutline","mainChartSelectRoot","input","mainChartSelect","top","right","left","bottom","fill","palette","text","hint","fontSize","i","background","light","primary","main","warning","stroke","dark","strokeWidth","bigStat","map","stat","product","tableWidget","table","getRandomData","length","min","max","multiplier","maxDiff","array","Array","lastValue","item","index","randomValue","Math","floor","random","resultArray","Whites","Reds","Sparkeling","Rose","wine","push","Red","White"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, LinearProgress, Select, OutlinedInput, MenuItem, } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { ResponsiveContainer, ComposedChart, AreaChart, LineChart, Line, Area, PieChart, Pie, Cell, YAxis, XAxis, } from \"recharts\";\nimport style from \"./styles\";\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/producerTable/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = style();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button=\"Latest Reports\" />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var Whites = getRandomData(31, 3500, 6500, 7500, 1000);\n  var Reds = getRandomData(31, 1500, 7500, 7500, 1500);\n  var Sparkeling = getRandomData(31, 1500, 7500, 7500, 1500);\n  var Rose = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < wine.length; i++) {\n    resultArray.push({\n      Red: Red[i].value,\n      White: White[i].value,\n      Sparkeling: Sparkeling[i].value,\n      Rose: Rose[i].value,\n    });\n  }\n\n  return resultArray;\n}"]},"metadata":{},"sourceType":"module"}