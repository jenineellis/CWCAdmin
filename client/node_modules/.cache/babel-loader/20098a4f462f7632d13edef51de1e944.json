{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/src/components/Wrappers/Wrappers.js\";\nimport React from \"react\";\nimport { withStyles, Badge as BadgeBase, Typography as TypographyBase, Button as ButtonBase } from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\nimport classnames from \"classnames\"; // styles\n\nvar style = makeStyles(theme => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16\n  }\n}));\n\nfunction Badge(_ref) {\n  let children = _ref.children,\n      colorBrightness = _ref.colorBrightness,\n      color = _ref.color,\n      props = _objectWithoutProperties(_ref, [\"children\", \"colorBrightness\", \"color\"]);\n\n  var classes = style();\n  var theme = useTheme();\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness)\n    }\n  });\n  return React.createElement(Styled, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, styledProps => React.createElement(BadgeBase, Object.assign({\n    classes: {\n      badge: classnames(classes.badge, styledProps.classes.badge)\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), children));\n}\n\nfunction Typography(_ref2) {\n  let children = _ref2.children,\n      weight = _ref2.weight,\n      size = _ref2.size,\n      colorBrightness = _ref2.colorBrightness,\n      color = _ref2.color,\n      props = _objectWithoutProperties(_ref2, [\"children\", \"weight\", \"size\", \"colorBrightness\", \"color\"]);\n\n  var theme = useTheme();\n  return React.createElement(TypographyBase, Object.assign({\n    style: {\n      color: getColor(color, theme, colorBrightness),\n      fontWeight: getFontWeight(weight),\n      fontSize: getFontSize(size, props.variant, theme)\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), children);\n}\n\nfunction Button(_ref3) {\n  let children = _ref3.children,\n      color = _ref3.color,\n      props = _objectWithoutProperties(_ref3, [\"children\", \"color\"]);\n\n  var theme = useTheme();\n  var Styled = createStyled({\n    button: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: \"white\",\n      \"&:hover\": {\n        backgroundColor: getColor(color, theme, \"light\"),\n        boxShadow: theme.customShadows.widgetWide\n      }\n    }\n  });\n  return React.createElement(Styled, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, ({\n    classes\n  }) => React.createElement(ButtonBase, Object.assign({\n    classes: {\n      root: classes.button\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), children));\n}\n\nexport { Badge, Typography, Button }; // ########################################################################\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n\n    case \"medium\":\n      return 500;\n\n    case \"bold\":\n      return 600;\n\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n\n    case \"md\":\n      multiplier = 1.5;\n      break;\n\n    case \"xl\":\n      multiplier = 2;\n      break;\n\n    case \"xxl\":\n      multiplier = 3;\n      break;\n\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize = variant && theme.typography[variant] ? theme.typography[variant].fontSize : theme.typography.fontSize + \"px\";\n  return \"calc(\".concat(defaultSize, \" * \").concat(multiplier, \")\");\n}\n\nfunction createStyled(styles, options) {\n  var Styled = function (props) {\n    const children = props.children,\n          other = _objectWithoutProperties(props, [\"children\"]);\n\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}","map":{"version":3,"sources":["/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/src/components/Wrappers/Wrappers.js"],"names":["React","withStyles","Badge","BadgeBase","Typography","TypographyBase","Button","ButtonBase","useTheme","makeStyles","classnames","style","theme","badge","fontWeight","height","minWidth","children","colorBrightness","color","props","classes","Styled","createStyled","backgroundColor","getColor","styledProps","weight","size","getFontWeight","fontSize","getFontSize","variant","button","boxShadow","customShadows","widget","widgetWide","root","brigtness","palette","multiplier","defaultSize","typography","styles","options","other"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  withStyles,\n  Badge as BadgeBase,\n  Typography as TypographyBase,\n  Button as ButtonBase,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar style = makeStyles(theme => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16,\n  },\n}));\n\nfunction Badge({ children, colorBrightness, color, ...props }) {\n  var classes = style();\n  var theme = useTheme();\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness),\n    },\n  });\n\n  return (\n    <Styled>\n      {styledProps => (\n        <BadgeBase\n          classes={{\n            badge: classnames(classes.badge, styledProps.classes.badge),\n          }}\n          {...props}\n        >\n          {children}\n        </BadgeBase>\n      )}\n    </Styled>\n  );\n}\n\nfunction Typography({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n}\n\nfunction Button({ children, color, ...props }) {\n  var theme = useTheme();\n\n  var Styled = createStyled({\n    button: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: \"white\",\n      \"&:hover\": {\n        backgroundColor: getColor(color, theme, \"light\"),\n        boxShadow: theme.customShadows.widgetWide,\n      },\n    },\n  });\n\n  return (\n    <Styled>\n      {({ classes }) => (\n        <ButtonBase classes={{ root: classes.button }} {...props}>\n          {children}\n        </ButtonBase>\n      )}\n    </Styled>\n  );\n}\n\nexport { Badge, Typography, Button };\n\n// ########################################################################\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nfunction createStyled(styles, options) {\n  var Styled = function(props) {\n    const { children, ...other } = props;\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}\n"]},"metadata":{},"sourceType":"module"}