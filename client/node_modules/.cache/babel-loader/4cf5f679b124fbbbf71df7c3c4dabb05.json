{"ast":null,"code":"import _slicedToArray from \"/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/src/pages/login/Login.js\";\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, Tabs, Tab, TextField, Fade } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\"; // import classnames from \"classnames\";\n// styles\n\nimport style from \"./styles\"; // logo\n// import logo from \"./logo.svg\";\n// import google from \"../../images/google.svg\";\n// context\n\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = style(); // global\n\n  var userDispatch = useUserDispatch(); // local\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeTabId = _useState6[0],\n      setActiveTabId = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nameValue = _useState8[0],\n      setNameValue = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loginValue = _useState10[0],\n      setLoginValue = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      passwordValue = _useState12[0],\n      setPasswordValue = _useState12[1];\n\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logotypeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.logotypeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Material Admin\")), React.createElement(\"div\", {\n    className: classes.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: activeTabId,\n    onChange: (e, id) => setActiveTabId(id),\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    label: \"Login\",\n    classes: {\n      root: classes.tab\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Tab, {\n    label: \"New User\",\n    classes: {\n      root: classes.tab\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), activeTabId === 0 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.greeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Good Morning, User\"), React.createElement(\"div\", {\n    className: classes.formDividerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.formDivider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.formDividerWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"or\"), React.createElement(\"div\", {\n    className: classes.formDivider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Fade, {\n    in: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Something is wrong with your login or password :(\")), React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Email Adress\",\n    type: \"email\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.formButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, isLoading ? React.createElement(CircularProgress, {\n    size: 26,\n    className: classes.loginLoader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    disabled: loginValue.length === 0 || passwordValue.length === 0,\n    onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    className: classes.forgetButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Forget Password\"))), activeTabId === 1 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h1\",\n    className: classes.greeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Welcome!\"), React.createElement(Typography, {\n    variant: \"h2\",\n    className: classes.subGreeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Create your account\"), React.createElement(Fade, {\n    in: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"secondary\",\n    className: classes.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Something is wrong with your login or password :(\")), React.createElement(TextField, {\n    id: \"name\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: nameValue,\n    onChange: e => setNameValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Full Name\",\n    type: \"email\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"email\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: loginValue,\n    onChange: e => setLoginValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Email Adress\",\n    type: \"email\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    InputProps: {\n      classes: {\n        underline: classes.textFieldUnderline,\n        input: classes.textField\n      }\n    },\n    value: passwordValue,\n    onChange: e => setPasswordValue(e.target.value),\n    margin: \"normal\",\n    placeholder: \"Password\",\n    type: \"password\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.creatingButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, isLoading ? React.createElement(CircularProgress, {\n    size: 26,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n    disabled: loginValue.length === 0 || passwordValue.length === 0 || nameValue.length === 0,\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    className: classes.createAccountButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Create your account\")), React.createElement(\"div\", {\n    className: classes.formDividerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.formDivider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.formDividerWord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"or\"), React.createElement(\"div\", {\n    className: classes.formDivider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })))), React.createElement(Typography, {\n    color: \"primary\",\n    className: classes.copyright,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"\\xA9 2014-2019 Flatlogic, LLC. All rights reserved.\")));\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/jenineellis/Documents/Bootcamp/coding/CWCAdmin/client/src/pages/login/Login.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","Tabs","Tab","TextField","Fade","withRouter","style","useUserDispatch","loginUser","Login","props","classes","userDispatch","isLoading","setIsLoading","error","setError","activeTabId","setActiveTabId","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","container","logotypeContainer","logotypeText","formContainer","form","e","id","root","tab","greeting","formDividerContainer","formDivider","formDividerWord","errorMessage","underline","textFieldUnderline","input","textField","target","value","formButtons","loginLoader","length","history","forgetButton","subGreeting","creatingButtonContainer","createAccountButton","copyright"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid, CircularProgress, Typography, Button, Tabs, Tab, TextField, Fade, } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n// import classnames from \"classnames\";\n\n// styles\nimport style from \"./styles\";\n\n// logo\n// import logo from \"./logo.svg\";\n// import google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = style();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        {/* <img src={logo} alt=\"logo\" className={classes.logotypeImage} /> */}\n        <Typography className={classes.logotypeText}>Material Admin</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Good Morning, User\n              </Typography>\n              {/* <Button size=\"large\" className={classes.googleButton}> */}\n                {/* <img src={google} alt=\"google\" className={classes.googleIcon} /> */}\n                {/* &nbsp;Sign in with Google */}\n              {/* </Button> */}\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forget Password\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    disabled={\n                      loginValue.length === 0 ||\n                      passwordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              {/* <Button */}\n                {/* size=\"large\" */}\n                {/* className={classnames( */}\n                  {/* classes.googleButton, */}\n                  {/* classes.googleButtonCreating, */}\n                {/* )} */}\n              {/* > */}\n                {/* <img src={google} alt=\"google\" className={classes.googleIcon} /> */}\n                {/* &nbsp;Sign in with Google */}\n              {/* </Button> */}\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2014-2019 Flatlogic, LLC. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}