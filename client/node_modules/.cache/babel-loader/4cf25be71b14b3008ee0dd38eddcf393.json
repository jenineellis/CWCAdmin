{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jenineellis/CWCAdmin/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/jenineellis/CWCAdmin/client/src/components/Notification/Notification.js\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { NotificationsNone as NotificationsIcon, ThumbUp as ThumbUpIcon, ShoppingCart as ShoppingCartIcon, LocalOffer as TicketIcon, BusinessCenter as DeliveredIcon, SmsFailed as FeedbackIcon, DiscFull as DiscIcon, Email as MessageIcon, Report as ReportIcon, Error as DefenceIcon, AccountBox as CustomerIcon, Done as ShippedIcon, Publish as UploadIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\nimport style from \"./styles\";\nimport { Typography } from \"../Wrappers\";\nconst typesIcons = {\n  \"e-commerce\": React.createElement(ShoppingCartIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  notification: React.createElement(NotificationsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }),\n  offer: React.createElement(TicketIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }),\n  info: React.createElement(ThumbUpIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }),\n  message: React.createElement(MessageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }),\n  feedback: React.createElement(FeedbackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }),\n  customer: React.createElement(CustomerIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }),\n  shipped: React.createElement(ShippedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }),\n  delivered: React.createElement(DeliveredIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }),\n  defence: React.createElement(DefenceIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }),\n  report: React.createElement(ReportIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }),\n  upload: React.createElement(UploadIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }),\n  disc: React.createElement(DiscIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })\n};\nexport default function Notification(_ref) {\n  let variant = _ref.variant,\n      props = _objectWithoutProperties(_ref, [\"variant\"]);\n\n  var classes = style();\n  var theme = useTheme();\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon\n    },\n    style: {\n      color: variant !== \"contained\" && theme.palette[props.color] && theme.palette[props.color].main\n    }\n  });\n  return React.createElement(\"div\", {\n    className: classnames(classes.notificationContainer, props.className, {\n      [classes.notificationContained]: variant === \"contained\",\n      [classes.notificationContainedShadowless]: props.shadowless\n    }),\n    style: {\n      backgroundColor: variant === \"contained\" && theme.palette[props.color] && theme.palette[props.color].main\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classnames(classes.notificationIconContainer, {\n      [classes.notificationIconContainerContained]: variant === \"contained\",\n      [classes.notificationIconContainerRounded]: variant === \"rounded\"\n    }),\n    style: {\n      backgroundColor: variant === \"rounded\" && theme.palette[props.color] && tinycolor(theme.palette[props.color].main).setAlpha(0.15).toRgbString()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, iconWithStyles), React.createElement(\"div\", {\n    className: classes.messageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classnames({\n      [classes.containedTypography]: variant === \"contained\"\n    }),\n    variant: props.typographyVariant,\n    size: variant !== \"contained\" && !props.typographyVariant && \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.message), props.extraButton && props.extraButtonClick && React.createElement(Button, {\n    onClick: props.extraButtonClick,\n    disableRipple: true,\n    className: classes.extraButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.extraButton)));\n}\n\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}","map":{"version":3,"sources":["/Users/jenineellis/CWCAdmin/client/src/components/Notification/Notification.js"],"names":["React","Button","NotificationsNone","NotificationsIcon","ThumbUp","ThumbUpIcon","ShoppingCart","ShoppingCartIcon","LocalOffer","TicketIcon","BusinessCenter","DeliveredIcon","SmsFailed","FeedbackIcon","DiscFull","DiscIcon","Email","MessageIcon","Report","ReportIcon","Error","DefenceIcon","AccountBox","CustomerIcon","Done","ShippedIcon","Publish","UploadIcon","useTheme","classnames","tinycolor","style","Typography","typesIcons","notification","offer","info","message","feedback","customer","shipped","delivered","defence","report","upload","disc","Notification","variant","props","classes","theme","icon","getIconByType","type","iconWithStyles","cloneElement","root","notificationIcon","color","palette","main","notificationContainer","className","notificationContained","notificationContainedShadowless","shadowless","backgroundColor","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","setAlpha","toRgbString","messageContainer","containedTypography","typographyVariant","extraButton","extraButtonClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { NotificationsNone as NotificationsIcon, ThumbUp as ThumbUpIcon, ShoppingCart as ShoppingCartIcon, LocalOffer as TicketIcon, BusinessCenter as DeliveredIcon, SmsFailed as FeedbackIcon, DiscFull as DiscIcon, Email as MessageIcon, Report as ReportIcon, Error as DefenceIcon, AccountBox as CustomerIcon, Done as ShippedIcon, Publish as UploadIcon, } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\nimport style from \"./styles\";\nimport { Typography } from \"../Wrappers\";\n\nconst typesIcons = {\n  \"e-commerce\": <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  var classes = style();\n  var theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== \"contained\" &&\n        theme.palette[props.color] &&\n        theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === \"contained\",\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === \"contained\" &&\n          theme.palette[props.color] &&\n          theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === \"contained\",\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\n        })}\n        style={{\n          backgroundColor:\n            variant === \"rounded\" &&\n            theme.palette[props.color] &&\n            tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === \"contained\",\n          })}\n          variant={props.typographyVariant}\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}\n"]},"metadata":{},"sourceType":"module"}